// Copyright 2020 Changkun Ou. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package chans

import (
	"math/rand"
)

// Fanout implements a generic fan-out for variadic channels
func Fanout(type T)(randomizer func(max int) int, In <-chan T, Outs ...chan T) {
	l := len(Outs)
	for v := range In {
		i := randomizer(l)
		if i < 0 || i > l { i = rand.Intn(l) }
		go func(v T) { Outs[i] <- v }(v)
	}
}

func LB(type T)(randomizer func(max int) int, ins []<-chan T, outs []chan T) {
	Fanout(randomizer, Fanin(ins...), outs...)
}
